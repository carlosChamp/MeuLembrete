@page "/VisualizarEventos"
@page "/VisualizarEventos/{MesSelecionado:datetime}"

@inject NavigationManager NavigationManager;
<div class="row controles">
    <div class="col-3">
        <div class="input-group" role="group" aria-label="Basic example">
            <input type="month" class="form-control dropdown" @bind="MesSelecionado" />
            <button type="button" class="btn btn-outline-primary" @onclick="() => alterarMes(-1)"><i class="oi oi-chevron-left" /></button>
            <button type="button" class="btn btn-outline-primary" @onclick="() => alterarMes(1)"><i class="oi oi-chevron-right" /></button>
        </div>
    </div>
    <div class="col-8 text-center">
        <h2>Calendário de Lembretes</h2>
    </div>
</div>
<Calendario MesSelecionado="MesSelecionado.Value"></Calendario>

@code {
    DateTime? mesSelecionado;
    [Parameter]
    public DateTime? MesSelecionado
    {
        get
        { return mesSelecionado; }
        set
        {
            mesSelecionado = value;
            if (mesSelecionado != null)
                redirectParaOMesSelecionado();
        }
    }

    private void redirectParaOMesSelecionado()
    {
        DateTime dataSelecionada = (MesSelecionado ?? DateTime.Now);
        NavigationManager.NavigateTo($"VisualizarEventos/{dataSelecionada.ToString("yyyy-MM-ddTHH:mm:ss", System.Globalization.CultureInfo.InvariantCulture)}");
    }

    private void alterarMes(int incremento)
    {
        DateTime dataSelecionada = (MesSelecionado ?? DateTime.Now).AddMonths(incremento);

        NavigationManager.NavigateTo($"VisualizarEventos/{dataSelecionada.ToString("yyyy-MM-ddTHH:mm:ss", System.Globalization.CultureInfo.InvariantCulture)}");
    }


    protected override void OnInitialized()
    {
        base.OnInitialized();

    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        mesSelecionado = MesSelecionado ?? new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1);
        StateHasChanged();
    }
}